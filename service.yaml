Description: ALB And Lambdas
AWSTemplateFormatVersion: "2010-09-09"

Resources:
  LoadBalancerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Load balance allow port 80 traffic
      VpcId: !ImportValue AlbLambdaVpcId
      SecurityGroupIngress:
        - IpProtocol: TCP
          FromPort: 80
          # Below maps to the pl-valid-ebsolutions-ip-addresses
          SourcePrefixListId: pl-0b220b9ea9b3c21f1
          ToPort: 80
      Tags:
        - Key: "CostCenter"
          Value: "projects.aws.alb-lambda"

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !Ref AlbLambdaLoadBalancerSecGroup
      Subnets:
        - !ImportValue AlbLambdaPublicSubnetA
        - !ImportValue AlbLambdaPublicSubnetB
      Tags:
        - Key: "CostCenter"
          Value: "projects.aws.alb-lambda"

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Protocol: HTTP
      LoadBalancerArn: !Ref LoadBalancer
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref LoadBalancerTargetGroup
      Port: 80
      Tags:
        - Key: "CostCenter"
          Value: "projects.aws.alb-lambda"

  LoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: lambda
      Targets:
        - AvailabilityZone: all
          Id: !GetAtt Lambda.Arn
      Tags:
        - Key: "CostCenter"
          Value: "projects.aws.alb-lambda"

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: Allow
            Principal:
              Service: ["lambda.amazonaws.com"]
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  LambdaFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Lambda.Arn
      Action: "lambda:InvokeFunction"
      Principal: elasticloadbalancing.amazonaws.com

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS Lambda function
      FunctionName: "lambda-function"
      Handler: index.handler
      MemorySize: 256
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.13
      Timeout: 60
      Tags:
        - Key: "CostCenter"
          Value: "projects.aws.alb-lambda"
      Code:
        ZipFile: |
          def handler(event, context):
            response = {
              'isBase64Encoded': False,
              'statusCode': 200,
              'body': 'HELLO WORLD!'
            }
            return response
